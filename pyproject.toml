[project]
name = "synth-ai"
version = "0.2.1.dev0"
description = "Software for aiding the best and multiplying the will - Core AI functionality and tracing"
authors = [{name = "Synth AI", email = "josh@usesynth.ai"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "pydantic-openapi-schema>=1.5.1",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "urllib3>=2.3.0",
    "tqdm>=4.66.4",
    "typing-inspect>=0.9.0",
    "jsonschema>=4.23.0",
    # AI/LLM providers
    "openai==1.63.0",
    "anthropic>=0.42.0",
    "google-generativeai>=0.8.0",
    # Tracing and observability
    "langfuse>=2.53.9,<3.0.0",
    "opentelemetry-api>=1.27.0",
    "opentelemetry-sdk>=1.27.0",
    # Cloud storage
    "boto3>=1.35.71",
    "botocore>=1.35.71",
    "diskcache>=5.6.3",
    "groq>=0.30.0",
    "google-genai>=1.26.0",
    "together>=1.5.21",
    "mistralai>=1.9.2",
    # Environment framework - basic dependencies
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "numpy>=2.2.3",
    "networkx>=3.4.2",
    "redis>=6.2.0",
    "imageio>=2.31.0",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "pillow>=11.2.1",
    "tabulate>=0.9.0",
    "duckdb>=1.0.0",
    "pyarrow>=18.0.0",
    "pandas>=2.2.3",
    "psutil>=7.0.0",
    "setuptools>=80.8.0",
    "gymnasium>=1.1.1",
    "ty>=0.0.1a5",  # Type annotations helper
    "gym>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "build>=1.2.2.post1",
    "twine>=4.0.0",
    "keyring>=24.0.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "pyright>=1.1.350",
    "coverage[toml]>=7.3.0",
    "ruff>=0.1.0",
]
google = [
    "google-api-core>=2.0.0",
    "google-generativeai>=0.8.0",
    "google-genai>=1.0.0",
]
mistral = [
    "mistralai>=1.0.0",
]
research = [
    # Heavy game environment dependencies
    "crafter>=1.8.3",
    "gym-sokoban>=0.0.6",
    "pyboy>=2.6.0",  # Game Boy emulator
    "nle>=0.9.1",  # NetHack Learning Environment
    "minigrid>=3.0.0",
    "datasets>=4.0.0",  # For math environments
]
all = [
    "google-api-core>=2.0.0",
    "google-generativeai>=0.8.0",
    "google-genai>=1.0.0",
    "mistralai>=1.0.0",
    # Include research dependencies in all
    "crafter>=1.8.3",
    "gym-sokoban>=0.0.6",
    "pyboy>=2.6.0",
    "nle>=0.9.1",
    "minigrid>=3.0.0",
    "datasets>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/synth-laboratories/synth-ai"
Repository = "https://github.com/synth-laboratories/synth-ai"
Issues = "https://github.com/synth-laboratories/synth-ai/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["synth_ai*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["synth_ai"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.pyright]
include = ["synth_ai", "tests"]
exclude = ["**/__pycache__"]
pythonVersion = "3.11"
typeCheckingMode = "standard"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "UP", "YTT", "B", "C4", "T10", "SIM"]
ignore = ["E501", "B008"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "pyright>=1.1.350",
]
