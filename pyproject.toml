[project]
name = "synth-ai"
version = "0.2.4.dev6"
description = "Software for aiding the best and multiplying the will - Core AI functionality and tracing"
authors = [{name = "Synth AI", email = "josh@usesynth.ai"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "urllib3>=2.3.0",
    "tqdm>=4.66.4",
    "jsonschema>=4.23.0",
    "backoff>=2.0.0",
    "typing_extensions>=4.0.0",
    # AI/LLM providers
    "openai>=1.99.0",
    "anthropic>=0.42.0",
    # Tracing and observability
    "langfuse>=2.53.9,<3.0.0",
    "opentelemetry-api>=1.26.0,<1.27.0",
    "opentelemetry-sdk>=1.26.0,<1.27.0",
    # Storage and caching
    "diskcache>=5.6.3",
    "groq>=0.30.0",
    "google-genai>=1.26.0",
    "together>=1.5.21",
    "mistralai>=1.9.2",
    # Environment framework - basic dependencies
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "numpy>=2.2.3",
    "networkx>=3.4.2",
    "redis>=6.2.0",
    "duckdb>=1.0.0",
    "pandas>=2.2.3",
    "ty>=0.0.1a5", # Type annotations helper
    "toml>=0.10.2",
    "sqlalchemy>=2.0.42",
    "aiosqlite>=0.21.0",
    "greenlet>=3.2.3",
    "libsql>=0.1.8",
    "google-api-core>=2.25.1",
    "google-generativeai>=0.8.5",
    "crafter>=1.8.3",
    "click>=8.1.0", # For CLI
    "textual>=1.1.0", # For interactive TUI dashboard
    "openai-harmony>=0.0.1", # For OSS-GPT Harmony encoding support
    "asyncpg>=0.30.0",
    "aiohttp>=3.8.0", # For async HTTP requests in Harmony integration
    "datasets>=4.0.0",
]

[project.scripts]
synth-ai = "synth_ai.cli:cli"

[project.optional-dependencies]
dev = [
    "build>=1.2.2.post1",
    "twine>=4.0.0",
    "keyring>=24.0.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "pyright>=1.1.350",
    "coverage[toml]>=7.3.0",
    "ruff>=0.1.0",
]
google = [
    "google-api-core>=2.0.0",
    "google-generativeai>=0.8.0",
    "google-genai>=1.0.0",
]
mistral = [
    "mistralai>=1.0.0",
]
research = [
    # Heavy game environment dependencies
    "crafter>=1.8.3",
    "datasets>=4.0.0",  # For math environments
]
all = [
    "google-api-core>=2.0.0",
    "google-generativeai>=0.8.0",
    "google-genai>=1.0.0",
    "mistralai>=1.0.0",
    # Include research dependencies in all
    "crafter>=1.8.3",
    "datasets>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/synth-laboratories/synth-ai"
Repository = "https://github.com/synth-laboratories/synth-ai"
Issues = "https://github.com/synth-laboratories/synth-ai/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["synth_ai*"]
exclude = [
    "docs*",
    "tests*",
    "scripts*",
    "private_tests*",
    # Exclude heavy demo/test subpackages from distribution (keep examples package code)
    "synth_ai.*agent_demos*",
    "synth_ai.*old*",
    "synth_ai.*tests*",
    "synth_ai.*units*",
    "synth_ai.tracing_v3.tests*",
]

[tool.setuptools]
include-package-data = false

[tool.setuptools.exclude-package-data]
"synth_ai" = [
    # Keep examples package code; exclude only heavy data inside agent_demos/old/tests
    "**/agent_demos/**",
    "**/old/**",
    "**/tests/**",
    "**/units/**",
]

[tool.pytest.ini_options]
testpaths = ["tests", "private_tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "fast: marks tests as fast (â‰¤5 seconds) - these are the default tests to run",
    "slow: marks tests as slow (>5 seconds) - requires more time/resources",
    "integration: marks tests as integration tests requiring external services",
    "unit: marks tests as isolated unit tests",
    "public: marks tests that can run in any environment",
    "private: marks tests that may require credentials or special setup",
]
# Add timeout for long-running tests
timeout = 300
# Show test durations (slowest N tests)
addopts = "--durations=10"

[tool.coverage.run]
source = ["synth_ai"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.pyright]
include = ["synth_ai", "tests"]
exclude = ["**/__pycache__"]
pythonVersion = "3.11"
typeCheckingMode = "standard"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "YTT", "B", "C4", "T10", "SIM"]
ignore = ["E501", "B008"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "pyright>=1.1.350",
    "responses>=0.25.7",
]
